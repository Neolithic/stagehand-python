name: Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      create_release:
        description: 'Create GitHub Release'
        required: true
        default: true
        type: boolean

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine wheel setuptools bumpversion ruff
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          
      - name: Run Ruff linting
        run: |
          # Run Ruff linter
          ruff check .
          
          # Run Ruff formatter check (without modifying files)
          ruff format --check .
          
      - name: Run tests
        run: |
          pytest
          
      - name: Update version
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          bumpversion ${{ github.event.inputs.release_type }}
          
      - name: Build package
        run: |
          python -m build
          
      - name: Upload to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*
          
      - name: Push version bump
        run: |
          git push
          git push --tags
          
      - name: Create GitHub Release
        if: ${{ github.event.inputs.create_release == 'true' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v$(python setup.py --version)
          name: Release v$(python setup.py --version)
          generate_release_notes: true 